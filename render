#!/usr/bin/env ruby

require 'erb'
require 'ostruct'
require 'color'
require 'pathname'

class ERB::Template
  def initialize(template_path)
    @template_path = Pathname.new(template_path)
    @render_path = @template_path.parent + @template_path.basename.to_s.gsub(/\.erb$/, '')
    @template = ERB.new(@template_path.read)
  end

  def write(a_binding)
    @render_path.open('w') do |f|
      f.write @template.result(a_binding)
    end
  end
end

index_html = ERB::Template.new('index.html.erb')
masks_css = ERB::Template.new('masks.css.erb')


masks_dir = Pathname.new('masks')

unless masks_dir.directory?
  system 'scripts/build_masks'
end

masks = masks_dir.children.find_all{ |f| f.file? and f.basename.to_s =~ /\.png$/ }
masks = masks.sort_by{ |f| f.basename.to_s.split('.').first.to_i }

masks_css.write(binding)



swatches = []

100.times do
  rgb_triple = [rand(256), rand(256), rand(256)]
  rgb = Color::RGB.from_fraction(*rgb_triple.map{|v| v/255.0})
  hsl = rgb.to_hsl

  sw = OpenStruct.new
  sw.bgcolor = "rgb(%d, %d, %d)" % rgb_triple

  sw.shade = case hsl.l
  when 0.0 ... 0.3
    :dark
  when 0.3 ... 0.7
    :mid
  when 0.7 .. 1.0
    :light
  end

  sw.pattern_id = rand(18)

  swatches.push sw
end

index_html.write(binding)
